/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.itlibrium.perfectrent;

import com.itlibrium.perfectrent.search.SearchDtoConverter;
import com.itlibrium.perfectrent.search.SearchService;
import com.itlibrium.perfectrent.search.SearchServiceWithAdaptation;
import com.itlibrium.perfectrent.search.adaptations.AdaptationService;
import com.itlibrium.perfectrent.search.adaptations.AdaptationServiceProvider;
import com.itlibrium.perfectrent.search.adaptations.AdaptationsConfig;
import com.itlibrium.perfectrent.search.adaptations.AdaptationsConfigProvider;
import com.itlibrium.perfectrent.search.adaptations.PotentialOutliersRemoval;
import com.itlibrium.perfectrent.search.adaptations.PotentialRestoringHiddenOffers;
import com.itlibrium.perfectrent.search.adaptations.TimeInfoProvider;
import com.itlibrium.perfectrent.search.dto.AggregatedOffersDto;
import com.itlibrium.perfectrent.search.dto.SearchCriteriaDto;
import com.itlibrium.perfectrent.search.retrieval.RetrievalService;
import com.itlibrium.perfectrent.search.shared.AccommodationProvider;
import com.itlibrium.perfectrent.search.shared.RiskyAreasConfigurationProvider;
import io.vavr.collection.List;
import io.vavr.control.Try;
import lombok.extern.slf4j.Slf4j;

@Slf4j
public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        doSearchWithoutAdaptation();
        doSearchWithAdaptation();
    }

    private static void doSearchWithoutAdaptation() {
        final RiskyAreasConfigurationProvider riskyAreasConfigurationProvider = searchCriteria -> List.empty();
        SearchService searchService = new SearchService(
            new RetrievalService(),
            riskyAreasConfigurationProvider,
            new SearchDtoConverter()
        );
        SearchCriteriaDto searchCriteria = new SearchCriteriaDto();
        AggregatedOffersDto aggregatedOffers = searchService.search(searchCriteria);
        log.info("Aggregated offers: {}", aggregatedOffers);
    }

    private static void doSearchWithAdaptation() {
        final RiskyAreasConfigurationProvider riskyAreasConfigurationProvider = searchCriteria -> List.empty();
        final AdaptationsConfigProvider adaptationsConfigProvider =
            () -> Try.of(() -> new AdaptationsConfig(List.of(
                new PotentialOutliersRemoval(AccommodationProvider.AIRBNC, 10),
                new PotentialRestoringHiddenOffers(AccommodationProvider.AIRBNC, 3)
            )));
        TimeInfoProvider timeInfoProvider = () -> false;
        final AdaptationService adaptationService = AdaptationServiceProvider.create(adaptationsConfigProvider, timeInfoProvider);
        SearchServiceWithAdaptation searchService = new SearchServiceWithAdaptation(
            new RetrievalService(),
            riskyAreasConfigurationProvider,
            adaptationService,
            new SearchDtoConverter()
        );
        SearchCriteriaDto searchCriteria = new SearchCriteriaDto();
        Try<AggregatedOffersDto> aggregatedOffers = searchService.searchTryBased(searchCriteria);
        //todo map domain exceptions
        log.info("Aggregated offers after adaptation {}", aggregatedOffers.get());
    }
}



